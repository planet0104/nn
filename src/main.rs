extern crate rand;
extern crate sdl2;

use sdl2::pixels::Color;
 
mod cnn;
use std::fs::File;
use std::io::prelude::*;
use std::str::FromStr;
use rand::Rng;
use sdl2::event::Event;
use sdl2::keyboard::Keycode;
use sdl2::rect::Point;
use std::time::{Duration, Instant};
use std::collections::HashMap;
use std::path::Path;
use sdl2::rect::Rect;
use sdl2::render::TextureQuery;
use sdl2::surface::Surface;

mod vector_2d;
mod controller;

const ma_html:&[u8] = include_bytes!("../ma.html");
const fan_html:&[u8] = include_bytes!("../fan.html");
//字典查询 http://dict.r12345.com/0x91D1.html (可以去到笔顺编号)
//笔顺图片查询: http://bishun.shufaji.com/0x91D1.html
// 1.渲染保存图片 2.从指定位置开始，取每一个笔画
//免费字体:https://www.jianshu.com/p/9da5250a9503
//

//横提
const STROKE_POINTS_HENG_TI:[(i32,i32); 162] = [(13,123),(14,123),(15,123),(16,123),(17,123),(18,123),(19,123),(20,122),(21,122),(22,122),(23,122),(24,122),(25,122),(26,122),(27,122),(28,122),(29,122),(30,122),(31,122),(32,122),(33,122),(34,121),(35,121),(36,121),(37,121),(38,121),(39,121),(40,121),(41,121),(42,121),(43,121),(44,121),(45,121),(46,121),(47,121),(48,121),(49,120),(50,120),(51,120),(52,120),(53,120),(54,120),(55,120),(56,120),(57,120),(58,120),(59,120),(60,120),(61,120),(62,120),(63,120),(64,119),(65,119),(66,119),(67,119),(68,119),(69,119),(70,119),(71,119),(72,119),(73,119),(74,119),(75,119),(76,119),(77,119),(78,119),(79,118),(80,118),(81,118),(82,118),(83,118),(84,118),(85,118),(86,118),(87,118),(88,118),(89,118),(90,118),(91,118),(92,118),(93,117),(94,117),(95,117),(96,117),(97,117),(98,117),(99,117),(100,117),(101,117),(102,117),(103,117),(104,117),(105,117),(106,117),(107,117),(108,116),(109,116),(110,116),(111,116),(112,116),(113,116),(114,116),(115,116),(116,116),(117,116),(118,116),(119,116),(120,116),(121,116),(122,116),(123,115),(124,115),(125,115),(126,115),(127,115),(128,115),(129,115),(130,115),(131,115),(132,115),(133,115),(134,115),(135,115),(136,115),(137,114),(138,114),(139,114),(140,114),(141,114),(142,114),(143,114),(144,114),(145,114),(146,114),(147,114),(148,114),(149,114),(150,114),(151,114),(152,113),(153,113),(154,113),(155,113),(156,113),(157,113),(158,113),(159,113),(160,113),(161,113),(162,113),(163,113),(164,113),(165,113),(166,113),(167,112),(168,112),(169,112),(170,112),(171,112),(172,112),(173,112),(174,112)];
//斜提
const STROKE_POINTS_XIE_TI:[(i32,i32); 190] = [(9,170),(10,170),(10,169),(11,169),(12,168),(13,167),(14,167),(15,166),(16,165),(17,165),(18,164),(19,163),(20,163),(21,162),(22,161),(23,161),(24,160),(25,159),(26,159),(27,158),(28,157),(29,157),(29,156),(30,156),(31,155),(32,155),(33,154),(34,153),(35,153),(36,152),(37,151),(38,151),(38,150),(39,150),(40,149),(41,149),(42,148),(43,147),(44,147),(44,146),(45,146),(46,145),(47,145),(47,144),(48,144),(49,143),(50,143),(51,142),(52,141),(53,141),(53,140),(54,140),(55,139),(56,139),(57,138),(58,137),(59,137),(60,136),(61,135),(62,134),(63,134),(64,133),(65,133),(66,132),(67,131),(68,131),(69,130),(70,129),(71,128),(72,128),(73,127),(74,127),(75,126),(76,125),(77,125),(77,124),(78,124),(79,123),(80,122),(81,122),(82,121),(83,121),(84,120),(85,119),(86,118),(87,118),(88,117),(89,116),(90,116),(91,115),(92,115),(93,114),(94,113),(95,112),(96,112),(97,111),(98,110),(99,110),(100,109),(101,109),(101,108),(102,108),(103,107),(104,106),(105,106),(106,105),(107,104),(108,104),(109,103),(110,102),(111,102),(112,101),(113,100),(114,100),(115,99),(116,98),(117,98),(118,97),(119,96),(120,96),(121,95),(122,94),(123,94),(124,93),(125,92),(126,92),(127,91),(128,90),(129,90),(130,89),(131,88),(132,88),(133,87),(134,86),(135,86),(136,85),(137,84),(138,84),(139,83),(140,82),(141,82),(142,81),(143,80),(144,80),(144,79),(145,79),(146,78),(147,78),(148,77),(149,76),(150,76),(151,75),(152,74),(153,73),(154,73),(155,72),(156,72),(157,71),(158,70),(159,70),(159,69),(160,69),(161,68),(162,67),(163,67),(164,66),(165,66),(166,65),(167,64),(168,64),(168,63),(169,63),(170,62),(171,61),(172,61),(173,60),(174,60),(175,59),(176,58),(177,57),(178,57),(179,56),(180,56),(181,55),(182,54),(183,54),(184,53),(185,52),(186,51),(187,51)];

//横撇1
const STROKE_POINTS_HENG_PIE1:[(i32,i32); 221] = [(18,98),(19,98),(20,98),(21,98),(22,97),(23,97),(24,97),(25,97),(26,97),(27,97),(28,97),(29,96),(30,96),(31,96),(32,96),(33,96),(34,96),(35,96),(36,96),(37,95),(38,95),(39,95),(40,95),(41,95),(42,95),(43,95),(44,94),(45,94),(46,94),(47,94),(48,94),(49,94),(50,94),(51,93),(52,93),(53,93),(54,93),(55,93),(56,93),(57,93),(58,92),(59,92),(60,92),(61,92),(62,92),(63,92),(64,92),(65,92),(66,91),(67,91),(68,91),(69,91),(70,91),(71,91),(72,91),(73,90),(74,90),(75,90),(76,90),(77,90),(78,90),(79,90),(80,89),(81,89),(82,89),(83,89),(84,89),(85,89),(86,89),(87,88),(88,88),(89,88),(90,88),(91,88),(92,88),(93,88),(94,88),(95,87),(96,87),(97,87),(98,87),(99,87),(100,87),(101,87),(102,86),(103,86),(104,86),(105,86),(106,86),(107,86),(108,86),(109,85),(110,85),(111,85),(112,85),(113,85),(114,85),(115,85),(116,84),(117,84),(118,84),(119,84),(120,84),(121,84),(122,84),(123,84),(124,83),(125,83),(126,83),(127,83),(128,83),(129,83),(130,83),(131,82),(132,82),(133,82),(134,82),(135,82),(136,82),(137,82),(138,81),(139,81),(140,81),(141,81),(142,81),(143,81),(144,81),(145,80),(146,80),(147,80),(148,80),(149,80),(150,80),(151,80),(152,80),(153,79),(154,79),(155,79),(156,79),(157,79),(158,79),(159,79),(160,78),(161,78),(162,78),(163,78),(164,79),(165,80),(166,81),(167,82),(168,82),(169,83),(170,84),(171,85),(172,86),(170,88),(169,89),(168,90),(167,91),(166,92),(165,92),(164,93),(163,94),(162,95),(161,96),(160,97),(159,98),(158,99),(157,100),(156,101),(155,102),(154,103),(153,104),(152,105),(151,105),(150,106),(149,107),(148,108),(147,109),(146,110),(145,111),(144,112),(143,113),(142,114),(141,115),(140,116),(139,117),(138,117),(137,118),(136,119),(135,120),(134,121),(133,122),(132,123),(131,124),(130,125),(129,126),(128,127),(127,128),(126,129),(125,129),(124,130),(123,131),(122,132),(121,133),(120,134),(119,135),(118,136),(117,137),(116,138),(115,139),(114,140),(113,141),(112,142),(111,142),(110,143),(109,144),(108,145),(107,146),(106,147),(105,148)];

//横撇2
const STROKE_POINTS_HENG_PIE2:[(i32,i32); 305] = [(36,82),(37,82),(38,82),(39,82),(40,82),(41,82),(42,82),(43,82),(44,82),(45,82),(46,82),(47,82),(48,82),(49,82),(50,82),(51,82),(52,82),(53,82),(54,81),(55,81),(56,81),(57,80),(58,80),(59,80),(60,79),(61,79),(62,79),(63,78),(64,78),(65,78),(66,78),(67,77),(68,77),(69,77),(70,76),(71,76),(72,76),(73,75),(74,75),(75,75),(76,74),(77,74),(78,74),(79,73),(80,73),(81,73),(82,72),(83,72),(84,72),(85,71),(86,71),(87,71),(88,71),(89,70),(90,70),(91,70),(92,69),(93,69),(94,69),(95,68),(96,68),(97,68),(98,67),(99,67),(100,67),(101,66),(102,66),(103,66),(104,65),(105,65),(106,65),(107,64),(108,64),(109,64),(110,63),(111,63),(112,63),(113,63),(114,62),(115,62),(116,62),(117,61),(118,61),(119,61),(120,60),(121,60),(122,60),(123,59),(124,59),(125,59),(126,58),(127,58),(128,58),(129,57),(130,57),(131,57),(132,56),(133,56),(134,56),(135,55),(136,55),(137,55),(138,55),(139,54),(140,54),(141,54),(142,53),(143,53),(144,53),(145,52),(146,52),(147,52),(148,51),(149,51),(150,51),(151,50),(152,50),(153,50),(154,49),(155,49),(156,49),(157,48),(158,48),(159,48),(160,48),(161,47),(162,47),(163,47),(164,46),(165,46),(166,46),(167,45),(168,45),(169,45),(170,44),(171,44),(172,45),(173,46),(174,46),(175,47),(176,48),(177,49),(178,49),(179,50),(178,51),(177,52),(176,53),(175,54),(174,54),(173,55),(172,56),(171,57),(170,58),(169,59),(168,60),(167,61),(166,62),(165,63),(164,63),(163,64),(162,65),(161,66),(160,67),(159,68),(158,69),(157,70),(156,71),(155,72),(154,72),(153,73),(152,74),(151,75),(150,76),(149,77),(148,78),(147,79),(146,80),(145,81),(144,81),(143,82),(142,83),(141,84),(140,85),(139,86),(138,87),(137,88),(136,89),(135,90),(134,91),(133,92),(132,93),(131,94),(130,95),(129,96),(128,96),(127,97),(126,98),(125,99),(124,100),(123,101),(122,102),(121,103),(120,104),(119,105),(118,106),(117,107),(116,108),(115,108),(114,109),(113,110),(112,111),(111,111),(110,112),(109,113),(108,113),(107,114),(106,115),(105,116),(104,116),(103,117),(102,118),(101,118),(100,119),(99,120),(98,120),(97,121),(96,122),(95,123),(94,123),(93,124),(92,125),(91,125),(90,126),(89,127),(88,128),(87,128),(86,129),(85,130),(84,130),(83,131),(82,131),(81,132),(80,133),(79,133),(78,134),(77,134),(76,135),(75,136),(74,136),(73,137),(72,137),(71,138),(70,138),(69,139),(68,140),(67,140),(66,141),(65,141),(64,142),(63,143),(62,143),(61,144),(60,144),(59,145),(58,146),(57,146),(56,147),(55,147),(54,148),(53,148),(52,149),(51,149),(50,150),(49,150),(48,151),(47,151),(46,152),(45,152),(44,153),(43,153),(42,154),(41,154),(40,155),(39,155),(38,156),(37,156),(36,157),(35,157),(34,158),(33,159),(32,159),(31,160),(30,160),(29,161),(28,161),(27,162),(26,162),(25,162),(24,163),(23,163),(22,163),(21,163),(20,164),(19,164),(18,164)];

//横撇3
const STROKE_POINTS_HENG_PIE3:[(i32,i32); 330] = [(58,25),(59,25),(60,25),(61,25),(62,25),(63,25),(64,25),(65,25),(66,25),(67,25),(68,25),(69,25),(70,25),(71,25),(72,25),(73,25),(74,24),(75,24),(76,24),(77,24),(78,24),(79,24),(80,23),(81,23),(82,23),(83,23),(84,23),(85,22),(86,22),(87,22),(88,22),(89,22),(90,21),(91,21),(92,21),(93,21),(94,21),(95,21),(96,20),(97,20),(98,20),(99,20),(100,20),(101,19),(102,19),(103,19),(104,19),(105,19),(106,18),(107,18),(108,18),(109,18),(110,18),(111,18),(112,17),(113,17),(114,17),(115,17),(116,17),(117,16),(118,16),(119,16),(120,16),(121,16),(122,15),(123,15),(124,15),(125,15),(126,15),(127,15),(128,14),(129,14),(130,14),(131,14),(132,14),(133,13),(134,13),(135,13),(136,13),(137,13),(138,12),(139,12),(140,12),(141,12),(142,12),(143,12),(144,11),(145,11),(146,11),(147,11),(148,11),(149,10),(150,10),(151,10),(152,10),(153,10),(154,9),(155,9),(156,9),(157,9),(158,9),(159,9),(160,8),(161,8),(162,8),(163,9),(164,9),(165,10),(166,10),(167,11),(168,12),(169,12),(170,13),(172,14),(172,15),(171,16),(171,17),(171,18),(171,19),(170,20),(170,21),(170,22),(170,23),(169,24),(169,25),(169,26),(169,27),(168,28),(168,29),(168,30),(167,31),(167,32),(167,33),(167,34),(166,35),(166,36),(166,37),(166,38),(165,39),(165,40),(165,41),(165,42),(164,43),(164,44),(164,45),(163,46),(163,47),(163,48),(163,49),(162,50),(162,51),(162,52),(162,53),(161,54),(161,55),(161,56),(161,57),(160,58),(160,59),(160,60),(159,61),(159,62),(158,63),(158,64),(157,65),(157,66),(157,67),(156,68),(156,69),(155,70),(155,71),(154,72),(154,73),(154,74),(153,75),(153,76),(152,77),(152,78),(151,79),(151,80),(150,81),(150,82),(150,83),(149,84),(149,85),(148,86),(148,87),(147,88),(147,89),(146,90),(146,91),(145,92),(145,93),(144,94),(143,95),(143,96),(142,97),(142,98),(141,99),(140,100),(140,101),(139,102),(139,103),(138,104),(137,105),(137,106),(136,107),(135,108),(135,109),(134,110),(134,111),(133,112),(132,113),(132,114),(131,115),(131,116),(130,117),(129,118),(129,119),(128,120),(127,121),(126,122),(126,123),(125,124),(124,125),(123,126),(123,127),(122,128),(121,129),(121,130),(120,131),(119,132),(118,133),(118,134),(117,135),(116,136),(115,137),(115,138),(114,139),(113,140),(112,141),(111,142),(110,143),(109,144),(108,145),(107,146),(106,147),(105,148),(104,149),(103,150),(102,151),(101,152),(100,153),(99,154),(98,155),(97,156),(96,157),(95,158),(94,159),(93,159),(92,160),(91,160),(90,161),(89,162),(88,162),(87,163),(86,163),(85,164),(84,165),(83,165),(82,166),(81,167),(80,167),(79,168),(78,168),(77,169),(76,170),(75,170),(74,171),(73,171),(72,172),(71,173),(70,173),(69,174),(68,174),(67,175),(66,175),(65,176),(64,176),(63,177),(62,177),(61,178),(60,178),(59,179),(58,179),(57,180),(56,180),(55,181),(54,181),(53,181),(52,182),(51,182),(50,183),(49,183),(48,183),(47,184),(46,184),(45,184),(44,185),(43,185),(42,185),(41,186),(40,186),(39,186),(38,187),(37,187),(36,188),(35,188),(34,188),(33,189),(32,189),(31,189),(30,190),(29,190),(28,191),(27,191),(26,192),(25,192),(24,193),(23,193)];

//斜撇
const STROKE_POINTS_XIE_PIE:[(i32,i32); 188] = [(137,23),(137,24),(137,25),(137,26),(137,27),(138,28),(138,29),(138,30),(138,31),(138,32),(138,33),(138,34),(138,35),(138,36),(138,37),(138,38),(138,39),(138,40),(138,41),(137,42),(137,43),(137,44),(137,45),(136,46),(136,47),(136,48),(135,49),(135,50),(135,51),(135,52),(134,53),(134,54),(134,55),(133,56),(133,57),(133,58),(132,59),(132,60),(132,61),(132,62),(131,63),(131,64),(131,65),(131,66),(130,67),(130,68),(130,69),(130,70),(129,71),(129,72),(129,73),(128,74),(128,75),(127,76),(127,77),(126,78),(126,79),(125,80),(125,81),(124,82),(124,83),(123,84),(123,85),(122,86),(122,87),(121,88),(121,89),(120,90),(120,91),(119,92),(119,93),(118,94),(118,95),(117,96),(117,97),(116,98),(116,99),(115,100),(115,101),(114,102),(114,103),(113,104),(113,105),(112,106),(112,107),(111,108),(111,109),(110,110),(110,111),(109,112),(108,113),(108,114),(107,115),(106,116),(106,117),(105,118),(104,119),(104,120),(103,121),(102,122),(102,123),(101,124),(100,125),(100,126),(99,127),(98,128),(97,129),(96,130),(96,131),(95,132),(94,133),(93,134),(92,135),(91,136),(90,137),(89,138),(89,139),(88,140),(87,141),(86,142),(85,143),(84,144),(83,145),(82,146),(81,147),(80,148),(79,149),(78,150),(78,151),(77,152),(76,153),(75,154),(74,155),(73,156),(72,157),(71,158),(70,159),(69,160),(68,161),(67,162),(66,163),(65,164),(64,165),(63,166),(62,167),(61,168),(60,169),(59,170),(58,171),(57,172),(56,172),(55,173),(54,174),(53,174),(52,175),(51,175),(50,176),(49,177),(48,177),(47,178),(46,179),(45,179),(44,180),(43,180),(42,181),(41,181),(40,182),(39,182),(38,183),(37,184),(36,184),(35,185),(34,186),(33,186),(32,187),(31,187),(30,188),(29,189),(28,189),(27,190),(26,190),(25,191),(24,191),(23,192),(22,192),(21,192),(20,193),(19,193)];
//竖撇
const STROKE_POINTS_SHU_PIE:[(i32,i32); 204] = [(138,2),(138,3),(138,4),(138,5),(138,6),(138,7),(138,8),(138,9),(138,10),(138,11),(138,12),(138,13),(138,14),(138,15),(138,16),(138,17),(138,18),(138,19),(138,20),(138,21),(138,22),(139,23),(139,24),(139,25),(139,26),(139,27),(139,28),(139,29),(139,30),(139,31),(139,32),(139,33),(139,34),(139,35),(139,36),(139,37),(139,38),(139,39),(139,40),(139,41),(139,42),(139,43),(139,44),(139,45),(139,46),(139,47),(139,48),(139,49),(139,50),(139,51),(139,52),(139,53),(139,54),(139,55),(139,56),(139,57),(139,58),(139,59),(139,60),(139,61),(139,62),(139,63),(139,64),(139,65),(139,66),(139,67),(139,68),(139,69),(139,70),(139,71),(139,72),(139,73),(138,74),(138,75),(138,76),(138,77),(138,78),(138,79),(138,80),(138,81),(138,82),(138,83),(138,84),(138,85),(137,86),(137,87),(137,88),(137,89),(137,90),(137,91),(137,92),(137,93),(137,94),(137,95),(137,96),(137,97),(137,98),(136,99),(136,100),(136,101),(136,102),(136,103),(136,104),(136,105),(136,106),(136,107),(135,108),(135,109),(135,110),(135,111),(135,112),(135,113),(134,114),(134,115),(134,116),(134,117),(133,118),(133,119),(132,120),(132,121),(132,122),(131,123),(131,124),(130,125),(130,126),(129,127),(129,128),(129,129),(128,130),(128,131),(127,132),(127,133),(126,134),(126,135),(125,136),(125,137),(124,138),(124,139),(123,140),(123,141),(122,142),(122,143),(121,144),(120,145),(120,146),(119,147),(118,148),(117,149),(117,150),(116,151),(115,152),(114,153),(113,154),(112,155),(111,156),(111,157),(110,158),(109,159),(108,160),(107,161),(106,162),(105,163),(104,164),(103,165),(102,166),(101,167),(100,168),(99,169),(98,170),(97,171),(96,172),(95,172),(94,173),(93,174),(92,175),(91,176),(90,176),(89,177),(88,177),(87,178),(86,178),(85,179),(84,180),(83,181),(82,182),(81,182),(80,183),(79,184),(78,185),(77,185),(76,186),(75,186),(74,187),(73,187),(72,188),(71,189),(70,189),(69,190),(68,190),(67,191),(66,191),(65,191),(64,191),(63,191)];

//斜捺
const STROKE_POINTS_XIE_NA:[(i32,i32); 176] = [(13,35),(14,35),(15,36),(16,36),(17,36),(18,36),(19,37),(20,37),(21,38),(22,38),(23,39),(24,39),(25,40),(26,41),(27,42),(28,43),(29,43),(30,44),(31,45),(32,46),(33,47),(34,48),(35,49),(36,50),(37,51),(38,52),(39,53),(40,54),(40,55),(41,56),(42,57),(43,58),(44,59),(45,60),(46,61),(47,62),(48,63),(49,64),(50,65),(50,66),(51,67),(52,68),(53,69),(54,70),(55,71),(55,72),(56,73),(57,74),(58,75),(59,76),(60,77),(60,78),(61,79),(62,80),(63,81),(64,82),(65,83),(66,84),(67,85),(68,86),(69,87),(70,88),(71,89),(72,90),(73,91),(74,92),(75,93),(76,94),(77,95),(78,96),(79,97),(80,98),(81,99),(82,100),(83,101),(84,102),(85,103),(86,104),(87,105),(88,106),(89,107),(90,108),(91,109),(92,109),(93,110),(94,111),(95,112),(96,113),(97,114),(98,115),(99,116),(100,117),(101,118),(102,119),(103,120),(104,121),(105,122),(106,123),(107,124),(108,125),(109,126),(110,127),(111,128),(112,129),(113,130),(114,131),(115,132),(116,133),(117,134),(118,135),(119,136),(120,136),(121,137),(122,138),(123,139),(124,139),(125,140),(126,141),(127,142),(128,143),(129,143),(130,144),(131,145),(132,145),(133,146),(134,146),(135,147),(136,147),(137,147),(138,148),(139,148),(140,149),(141,149),(142,149),(143,150),(144,150),(145,150),(146,150),(147,151),(148,151),(149,151),(150,151),(151,152),(152,152),(153,152),(154,152),(155,152),(156,153),(157,153),(158,153),(159,153),(160,153),(161,154),(162,154),(163,154),(164,154),(165,154),(166,155),(167,155),(168,155),(169,155),(170,155),(171,156),(172,156),(173,156),(174,156),(175,156),(176,156),(177,157),(178,157),(179,157),(180,157),(181,157),(182,157),(183,157),(184,157)];
//平捺
const STROKE_POINTS_PING_NA:[(i32,i32); 166] = [(16,91),(17,91),(18,92),(19,92),(20,92),(21,93),(22,93),(23,94),(24,95),(25,95),(26,96),(27,97),(28,98),(29,99),(30,100),(31,100),(32,101),(33,102),(34,103),(35,104),(36,104),(37,105),(38,105),(39,106),(40,106),(41,107),(42,107),(43,108),(44,109),(45,110),(46,110),(47,111),(48,112),(49,112),(50,113),(51,113),(52,114),(53,115),(54,115),(55,116),(56,116),(57,117),(58,117),(59,118),(60,119),(61,119),(62,120),(63,120),(64,121),(65,121),(66,122),(67,122),(68,123),(69,123),(70,124),(71,124),(72,124),(73,124),(74,125),(75,125),(76,125),(77,125),(78,125),(79,125),(80,125),(81,125),(82,126),(83,126),(84,126),(85,126),(86,126),(87,126),(88,127),(89,127),(90,127),(91,127),(92,128),(93,128),(94,128),(95,128),(96,128),(97,129),(98,129),(99,129),(100,129),(101,129),(102,130),(103,130),(104,130),(105,130),(106,130),(107,130),(108,130),(109,131),(110,131),(111,131),(112,131),(113,131),(114,131),(115,131),(116,131),(117,132),(118,132),(119,132),(120,132),(121,132),(122,132),(123,132),(124,132),(125,132),(126,132),(127,132),(128,132),(129,132),(130,132),(131,132),(132,132),(133,132),(134,132),(135,132),(136,132),(137,132),(138,132),(139,132),(140,132),(141,132),(142,132),(143,132),(144,132),(145,132),(146,132),(147,132),(148,132),(149,132),(150,132),(151,132),(152,132),(153,132),(154,132),(155,132),(156,132),(157,132),(158,132),(159,132),(160,132),(161,132),(162,132),(163,132),(164,132),(165,132),(166,132),(167,132),(168,132),(169,132),(170,132),(171,132),(172,132),(173,132),(174,132),(175,132),(176,132),(177,131),(178,131),(179,131),(180,130),(181,130)];

//竖折撇
const STROKE_SHU_ZHE_PIE:[(i32,i32); 264] = [(102,14),(102,15),(102,16),(101,17),(101,18),(101,19),(101,20),(101,21),(100,22),(100,23),(100,24),(100,25),(99,26),(99,27),(99,28),(99,29),(99,30),(98,31),(98,32),(98,33),(98,34),(98,35),(97,36),(97,37),(97,38),(97,39),(97,40),(96,41),(96,42),(96,43),(96,44),(95,45),(95,46),(95,47),(95,48),(95,49),(94,50),(94,51),(94,52),(94,53),(94,54),(93,55),(93,56),(93,57),(93,58),(93,59),(92,60),(92,61),(92,62),(92,63),(91,64),(91,65),(91,66),(91,67),(91,68),(90,69),(90,70),(90,71),(90,72),(89,73),(89,74),(89,75),(89,76),(88,77),(88,78),(88,79),(88,80),(87,81),(87,82),(87,83),(86,84),(86,85),(86,86),(86,87),(85,88),(85,89),(85,90),(84,91),(84,92),(84,93),(84,94),(83,95),(83,96),(83,97),(83,98),(82,99),(82,100),(82,101),(81,102),(81,103),(81,104),(81,105),(80,106),(80,107),(80,108),(79,109),(79,110),(78,111),(78,112),(78,113),(77,114),(77,115),(76,116),(76,117),(75,118),(75,119),(75,120),(74,121),(74,122),(73,123),(73,124),(73,125),(72,126),(72,127),(71,128),(71,129),(71,130),(70,131),(70,132),(69,133),(69,134),(68,135),(68,136),(68,137),(67,138),(67,139),(66,140),(66,141),(66,142),(65,143),(65,144),(66,144),(67,144),(68,144),(69,144),(70,144),(71,144),(72,144),(73,143),(74,143),(75,143),(76,143),(77,143),(78,143),(79,143),(80,143),(81,143),(82,143),(83,143),(84,142),(85,142),(86,142),(87,142),(88,142),(89,142),(90,141),(91,141),(92,141),(93,141),(94,141),(95,141),(96,140),(97,140),(98,140),(99,140),(100,140),(101,140),(102,140),(103,140),(104,140),(105,140),(106,140),(107,140),(108,140),(109,139),(110,139),(111,139),(112,139),(113,139),(114,139),(115,139),(116,139),(117,139),(118,139),(119,139),(120,139),(121,139),(122,139),(123,139),(124,139),(125,139),(126,138),(127,138),(128,138),(129,138),(130,138),(131,138),(132,138),(133,138),(134,138),(135,138),(136,138),(137,138),(138,139),(139,139),(140,139),(141,139),(142,139),(143,140),(144,141),(145,142),(145,142),(145,143),(144,144),(144,145),(143,146),(143,147),(142,148),(141,149),(140,150),(140,151),(139,152),(138,153),(137,154),(136,155),(135,156),(134,157),(133,158),(133,159),(132,160),(131,161),(130,162),(129,163),(128,164),(127,165),(126,166),(125,167),(124,168),(123,169),(122,170),(121,170),(120,171),(119,172),(118,173),(117,174),(116,175),(115,176),(114,177),(113,178),(112,179),(111,180),(110,181),(109,182),(108,183),(107,184),(106,185),(105,185),(104,186),(103,187),(102,188),(101,189),(100,190),(99,191),(98,192)];
//横折折撇
const STROKE_POINTS_HENG_ZHE_ZHE_PIE:[(i32,i32); 357] = [(26,45),(27,45),(28,45),(29,44),(30,44),(31,44),(32,44),(33,43),(34,43),(35,43),(36,43),(37,43),(38,42),(39,42),(40,42),(41,42),(42,41),(43,41),(44,41),(45,41),(46,41),(47,40),(48,40),(49,40),(50,40),(51,39),(52,39),(53,39),(54,39),(55,39),(56,38),(57,38),(58,38),(59,38),(60,37),(61,37),(62,37),(63,37),(64,37),(65,36),(66,36),(67,36),(68,36),(69,35),(70,35),(71,35),(72,35),(73,35),(74,34),(75,34),(76,34),(77,34),(78,34),(79,33),(80,33),(81,33),(82,33),(83,32),(84,32),(85,32),(86,32),(87,32),(88,31),(89,31),(90,31),(91,31),(92,30),(93,30),(94,30),(95,30),(96,30),(97,29),(98,29),(99,29),(100,29),(101,28),(102,28),(103,28),(104,28),(105,28),(106,27),(107,27),(108,27),(109,27),(110,26),(111,26),(112,26),(113,26),(114,26),(115,25),(116,25),(117,25),(118,25),(119,24),(120,24),(121,24),(122,24),(123,24),(124,23),(125,23),(126,23),(127,23),(128,22),(129,22),(130,22),(131,22),(132,22),(133,22),(134,22),(135,22),(136,22),(137,22),(138,21),(139,21),(140,21),(141,21),(142,21),(143,21),(144,21),(145,21),(146,21),(147,22),(148,22),(149,22),(149,22),(149,23),(148,22),(148,24),(148,25),(148,26),(148,27),(147,22),(147,28),(147,29),(147,30),(147,31),(146,32),(146,33),(145,34),(145,35),(144,36),(144,37),(143,38),(143,39),(142,40),(142,41),(141,42),(141,43),(140,44),(139,45),(139,46),(138,47),(138,48),(137,49),(137,50),(136,51),(136,52),(135,53),(135,54),(134,55),(134,56),(133,57),(133,58),(132,59),(132,60),(131,61),(131,62),(130,63),(130,64),(129,65),(129,66),(128,67),(128,68),(127,69),(127,70),(126,71),(126,72),(125,73),(125,74),(124,75),(124,76),(124,77),(123,78),(123,79),(122,80),(122,81),(121,82),(121,83),(121,84),(120,85),(120,86),(119,87),(119,88),(120,88),(121,88),(122,89),(123,89),(124,89),(125,89),(126,89),(127,89),(128,89),(129,89),(130,89),(131,89),(132,89),(133,89),(134,89),(135,89),(136,89),(137,89),(138,88),(139,88),(140,88),(141,88),(142,88),(143,88),(144,88),(145,88),(146,88),(147,88),(148,88),(149,88),(150,89),(151,89),(152,90),(153,90),(154,91),(155,92),(155,93),(156,94),(156,94),(156,95),(156,96),(156,97),(155,98),(155,99),(155,100),(155,101),(154,102),(154,103),(154,104),(153,105),(153,106),(152,107),(152,108),(152,109),(151,110),(151,111),(150,112),(150,113),(149,114),(149,115),(148,116),(148,117),(147,118),(147,119),(146,120),(146,121),(145,122),(145,123),(144,124),(144,125),(143,126),(143,127),(142,128),(142,129),(141,130),(140,131),(140,132),(139,133),(138,134),(137,135),(137,136),(136,137),(135,138),(134,139),(134,140),(133,141),(132,142),(131,143),(130,144),(130,145),(129,146),(128,147),(127,148),(126,149),(125,150),(124,150),(123,151),(122,152),(121,153),(120,154),(119,155),(119,156),(118,157),(117,158),(116,159),(115,160),(114,161),(113,162),(112,162),(111,163),(110,164),(109,165),(108,165),(107,166),(106,166),(105,167),(104,167),(103,168),(102,168),(101,169),(100,169),(99,170),(98,170),(97,171),(96,171),(95,172),(94,173),(93,173),(92,174),(91,174),(90,175),(89,175),(88,176),(87,176),(86,177),(85,177),(84,178),(83,178),(82,179),(81,179),(80,180),(79,180),(78,180),(77,181),(76,181),(75,181),(74,182),(73,182),(72,182),(71,182),(70,183),(69,183),(68,183),(67,184),(66,184),(65,184),(64,185),(63,185),(62,185),(61,186),(60,186),(59,186),(58,187),(57,187)];

//竖提1
const STROKE_POINTS_SHU_TI1:[(i32,i32); 245] = [(89,13),(89,14),(89,15),(90,16),(90,17),(90,18),(90,19),(90,20),(91,21),(91,22),(91,23),(91,24),(91,25),(92,26),(92,27),(92,28),(92,29),(92,30),(93,31),(93,32),(93,33),(93,34),(93,35),(93,36),(93,37),(93,38),(94,39),(94,40),(94,41),(94,42),(94,43),(94,44),(94,45),(94,46),(94,47),(94,48),(95,49),(95,50),(95,51),(95,52),(95,53),(95,54),(95,55),(95,56),(95,57),(95,58),(95,59),(95,60),(95,61),(95,62),(95,63),(95,64),(95,65),(95,66),(95,67),(95,68),(95,69),(95,70),(95,71),(95,72),(95,73),(95,74),(95,75),(95,76),(95,77),(95,78),(96,79),(96,80),(96,81),(96,82),(96,83),(96,84),(96,85),(96,86),(96,87),(96,88),(96,89),(96,90),(96,91),(96,92),(96,93),(96,94),(96,95),(96,96),(96,97),(96,98),(96,99),(96,100),(96,101),(96,102),(96,103),(96,104),(96,105),(96,106),(96,107),(96,108),(96,109),(96,110),(96,111),(96,112),(96,113),(96,114),(96,115),(96,116),(96,117),(96,118),(95,119),(95,120),(95,121),(95,122),(95,123),(95,124),(95,125),(95,126),(95,127),(95,128),(95,129),(95,130),(95,131),(95,132),(95,133),(95,134),(94,135),(94,136),(94,137),(94,138),(93,139),(93,140),(93,141),(93,142),(92,143),(92,144),(92,145),(92,146),(91,147),(91,148),(91,149),(91,150),(90,151),(90,152),(90,153),(90,154),(90,155),(89,156),(89,157),(89,158),(89,159),(89,160),(89,161),(88,162),(88,163),(88,164),(88,165),(89,166),(90,167),(91,166),(92,165),(93,164),(94,163),(95,162),(95,161),(96,160),(97,159),(98,158),(99,157),(100,156),(100,155),(101,154),(102,153),(103,152),(104,151),(104,150),(105,149),(106,148),(107,147),(108,146),(108,145),(109,144),(110,143),(111,142),(112,141),(113,140),(113,139),(114,138),(115,137),(116,136),(117,135),(118,134),(119,133),(119,132),(120,131),(121,130),(122,129),(123,128),(124,127),(125,126),(126,125),(127,124),(127,123),(128,122),(129,121),(130,120),(131,119),(132,118),(133,117),(134,116),(134,115),(135,114),(136,113),(137,112),(138,111),(139,110),(140,109),(141,108),(141,107),(142,106),(143,105),(144,104),(145,103),(146,102),(147,101),(148,100),(149,99),(150,98),(150,97),(151,96),(152,95),(153,94),(154,93),(155,92),(156,91),(157,90),(158,89),(158,88),(159,87),(160,86),(161,85),(162,84),(163,83),(163,82),(164,81),(165,80),(166,79),(167,79),(168,79)];
//竖提2
const STROKE_POINTS_SHU_TI2:[(i32,i32); 246] = [(108,7),(108,8),(108,9),(108,10),(108,11),(108,12),(108,13),(108,14),(108,15),(108,16),(108,17),(108,18),(108,19),(108,20),(108,21),(108,22),(108,23),(108,24),(108,25),(108,26),(108,27),(108,28),(108,29),(108,30),(107,31),(107,32),(107,33),(107,34),(107,35),(107,36),(107,37),(107,38),(107,39),(107,40),(107,41),(107,42),(107,43),(107,44),(106,45),(106,46),(106,47),(106,48),(106,49),(106,50),(106,51),(106,52),(106,53),(106,54),(105,55),(105,56),(105,57),(105,58),(105,59),(105,60),(105,61),(104,62),(104,63),(104,64),(104,65),(104,66),(104,67),(104,68),(103,69),(103,70),(103,71),(103,72),(103,73),(103,74),(103,75),(102,76),(102,77),(102,78),(102,79),(102,80),(102,81),(102,82),(101,83),(101,84),(101,85),(101,86),(101,87),(101,88),(100,89),(100,90),(100,91),(100,92),(100,93),(99,94),(99,95),(99,96),(99,97),(98,98),(98,99),(98,100),(98,101),(98,102),(97,103),(97,104),(97,105),(97,106),(97,107),(96,108),(96,109),(96,110),(96,111),(95,112),(95,113),(95,114),(95,115),(95,116),(94,117),(94,118),(94,119),(94,120),(94,121),(93,122),(93,123),(93,124),(93,125),(92,126),(92,127),(92,128),(92,129),(91,130),(91,131),(91,132),(91,133),(90,134),(90,135),(90,136),(90,137),(89,138),(89,139),(89,140),(88,141),(88,142),(88,143),(88,144),(87,145),(87,146),(87,147),(86,148),(86,149),(86,150),(85,151),(85,152),(85,153),(84,154),(84,155),(84,156),(83,157),(83,158),(83,159),(82,160),(82,161),(82,162),(81,163),(81,164),(80,165),(80,166),(79,167),(79,168),(78,169),(78,170),(77,171),(77,172),(76,173),(76,174),(75,175),(74,176),(74,177),(74,178),(73,178),(73,179),(72,179),(73,179),(74,178),(75,178),(76,178),(77,177),(78,177),(79,176),(80,176),(81,176),(82,175),(83,175),(84,175),(85,174),(86,174),(87,174),(88,174),(89,173),(90,173),(91,173),(92,172),(93,172),(94,172),(95,171),(96,171),(97,170),(98,170),(99,170),(100,170),(101,169),(102,169),(103,169),(104,169),(105,168),(106,168),(107,168),(108,167),(109,167),(110,167),(111,166),(112,166),(113,165),(114,165),(115,165),(116,164),(117,164),(118,164),(119,163),(120,163),(121,163),(122,162),(123,162),(124,162),(125,162),(126,161),(127,161),(128,160),(129,160),(130,159),(131,159),(132,158),(133,158),(134,157),(135,157),(136,157),(137,156),(138,156),(139,156),(140,155),(141,155),(142,154),(143,154)];
//竖提3
const STROKE_POINTS_SHU_TI3:[(i32,i32); 227] = [(91,8),(91,9),(92,10),(92,11),(92,12),(92,13),(93,14),(93,15),(93,16),(93,17),(94,18),(94,19),(94,20),(94,21),(95,22),(95,23),(95,24),(95,25),(96,26),(96,27),(96,28),(96,29),(96,30),(96,31),(96,32),(96,33),(96,34),(96,35),(96,36),(96,37),(96,38),(96,39),(96,40),(97,41),(97,42),(97,43),(97,44),(97,45),(97,46),(97,47),(97,48),(97,49),(97,50),(97,51),(97,52),(97,53),(97,54),(97,55),(97,56),(97,57),(97,58),(97,59),(97,60),(97,61),(97,62),(97,63),(97,64),(97,65),(97,66),(97,67),(97,68),(97,69),(97,70),(97,71),(97,72),(97,73),(96,74),(96,75),(96,76),(96,77),(96,78),(96,79),(96,80),(96,81),(96,82),(96,83),(96,84),(96,85),(96,86),(96,87),(96,88),(96,89),(96,90),(96,91),(96,92),(96,93),(96,94),(96,95),(96,96),(96,97),(96,98),(96,99),(96,100),(96,101),(96,102),(96,103),(96,104),(96,105),(96,106),(96,107),(96,108),(96,109),(96,110),(96,111),(96,112),(96,113),(96,114),(96,115),(96,116),(96,117),(96,118),(96,119),(96,120),(96,121),(96,122),(96,123),(96,124),(96,125),(96,126),(96,127),(95,128),(95,129),(95,130),(95,131),(95,132),(95,133),(95,134),(95,135),(95,136),(95,137),(95,138),(95,139),(94,140),(94,141),(94,142),(94,143),(94,144),(94,145),(94,146),(94,147),(94,148),(94,149),(93,150),(93,151),(93,152),(93,153),(93,154),(93,155),(92,156),(92,157),(92,158),(92,159),(92,160),(92,161),(91,162),(91,163),(91,164),(91,165),(91,166),(91,167),(90,168),(90,169),(90,170),(90,171),(90,172),(89,173),(89,174),(89,175),(89,176),(88,177),(88,178),(88,179),(88,180),(88,181),(88,182),(87,183),(87,184),(88,185),(87,185),(88,185),(89,184),(90,184),(91,183),(92,183),(93,182),(94,182),(95,181),(96,180),(97,179),(98,179),(99,178),(100,177),(101,177),(102,176),(103,176),(104,175),(105,175),(106,175),(107,174),(108,174),(109,173),(110,173),(111,172),(112,172),(113,171),(114,171),(115,170),(116,170),(117,169),(118,169),(119,168),(120,168),(121,167),(122,167),(123,167),(124,166),(125,166),(126,165),(127,165),(128,164),(129,164),(130,163),(131,163),(132,162),(133,161),(134,161),(135,160)];

fn main() {

    let sdl_context = sdl2::init().unwrap();
    let video_subsystem = sdl_context.video().unwrap();
    
    let window = video_subsystem.window("nn", 520, 520)
      .position_centered()
      .build()
      .unwrap();

    let mut canvas = window.into_canvas().build().unwrap();

    let mut controller = controller::Controller::new();

    match controller.train_network(){
        Ok(_) => println!("网络训练成功."),
        Err(err) => println!("网络训练失败! {}", err)
    }

    //write_vectors(&mut controller);

    let texture_creator = canvas.texture_creator();
    let bmp_surface = Surface::load_bmp("ji.bmp").unwrap();
    let texture = texture_creator.create_texture_from_surface(&bmp_surface).unwrap();

    let draw = false;

    controller.render(&mut canvas);
    if draw{
        canvas.copy(&texture, None, Some(Rect::new(0, 0, 520, 520))).unwrap();
        canvas.present();
    }

    // let (key, draw) = parse_html(&String::from_utf8_lossy(fan_html)).unwrap();
    // canvas.set_draw_color(Color::RGB(255, 255, 255));
    // //canvas.clear();
    // let scale = 0.5;
    // canvas.set_scale(scale, scale).unwrap();
    // for i in 0..draw.len(){
    //     println!("第{}笔:{:?}", i, draw[i]);
    //     canvas.draw_lines(draw[i].as_slice()).unwrap();
    // }
    // canvas.present();

    'mainloop: loop {
            for event in sdl_context.event_pump().unwrap().poll_iter() {
                match event {
                    Event::Quit{..} |
                    Event::KeyDown {keycode: Option::Some(Keycode::Escape), ..} =>
                        break 'mainloop,
                    Event::MouseButtonDown {..} => {
                        controller.set_drawing(true);
                        controller.render(&mut canvas);
                        if draw{
                            canvas.copy(&texture, None, Some(Rect::new(0, 0, 520, 520))).unwrap();
                            canvas.present();
                        }
                    }
                    Event::MouseMotion {x, y, ..} => {         
                        if controller.drawing(){
                            controller.add_point(Point::new(x, y));
                            controller.render(&mut canvas);
                            if draw{
                                canvas.copy(&texture, None, Some(Rect::new(0, 0, 520, 520))).unwrap();
                                canvas.present();
                            }
                        }
                    }
                    Event::MouseButtonUp{..} =>{
                        controller.set_drawing(false);
                        controller.render(&mut canvas);
                        if draw{
                            canvas.copy(&texture, None, Some(Rect::new(0, 0, 520, 520))).unwrap();
                            canvas.present();
                        }
                    }
                    _ => {}
                }
            }
    }
}

fn write_vectors(controller:&mut controller::Controller){
    let strokes = vec![
        //横提
        STROKE_POINTS_HENG_TI.to_vec(),
        //斜提
        STROKE_POINTS_XIE_TI.to_vec(),

        //横撇1
        STROKE_POINTS_HENG_PIE1.to_vec(),

        //横撇2
        STROKE_POINTS_HENG_PIE2.to_vec(),

        //横撇3
        STROKE_POINTS_HENG_PIE3.to_vec(),

        //斜撇
        STROKE_POINTS_XIE_PIE.to_vec(),
        //竖撇
        STROKE_POINTS_SHU_PIE.to_vec(),

        //斜捺
        STROKE_POINTS_XIE_NA.to_vec(),
        //平捺
        STROKE_POINTS_PING_NA.to_vec(),

        //竖折撇
        STROKE_SHU_ZHE_PIE.to_vec(),
        //横折折撇
        STROKE_POINTS_HENG_ZHE_ZHE_PIE.to_vec(),

        //竖提1
        STROKE_POINTS_SHU_TI1.to_vec(),
        //竖提2
        STROKE_POINTS_SHU_TI2.to_vec(),
        //竖提3
        STROKE_POINTS_SHU_TI3.to_vec(),
    ];

    let mut vectors = String::new();
    for stroke in strokes{
        controller.clear();
        for point in stroke{
            controller.add_point(Point::new(point.0, point.1));
        }
        if controller.smooth(){
            //创建向量
            controller.create_vectors();
        }
        vectors.push_str(&format!("{:?},\n", controller.vectors()));
    }
    use std::fs::File;
    let mut file = File::create("vectors.txt").unwrap();
    file.write_all(vectors.as_bytes()).unwrap();
}

fn parse_html<'a>(html: &str)->Option<(String, Vec<Vec<Point>>)>{
    /*

	hzbh.main('繁', 繁:[17,'0:(162,18) (186,36) (138,96) (96,144) (30,204)#1:(138,96) (420,96) (378,78) (336,96)#2:(144,138) (108,336) (84,354) (108,336) (444,336) (402,324) (366,336)#3:(138,162) (360,162) (390,138) (360,162) (330,360)#4:(192,168) (246,204) (264,228) (270,246)#5:(24,252) (462,252) (420,234) (384,252)#6:(192,252) (246,276) (264,300) (270,324)#7:(528,18) (552,30) (510,96) (474,144) (444,186)#8:(498,114) (726,114) (684,96) (648,114)#9:(654,114) (636,162) (612,216) (582,264) (546,306) (492,354) (438,390)#10:(486,132) (522,210) (552,258) (588,300) (630,336) (660,360) (714,390)#11:(312,360) (348,366) (198,456) (162,468) (198,456) (402,444)#12:(468,384) (498,396) (348,474) (150,564) (114,576) (150,564) (576,540)#13:(480,474) (552,516) (594,552) (618,588)#14:(390,552) (390,708) (378,732) (348,762) (270,702)#15:(234,594) (276,612) (192,672) (120,714) (54,744)#16:(480,606) (540,636) (618,684) (690,738)']});hzbh.flash('繁','fj/fan7');
    */
   let s = html.split("hzbh.main(");
   if let Some(s) = s.skip(1).next(){
       let mut s = s.split(");");
       if let Some(s) = s.next(){
            let s = s.split("{");
            if let Some(s) = s.skip(1).next(){
                //繁:[17, '0:(x,y)..#2:(x,y)..#3..']}
                
                let mut map = s.split(":[");
                let key = map.next().unwrap();
                let mut value = map.next().unwrap().trim_right_matches("']}").split(",'");
                let count = value.next().unwrap();
                let mut string = String::from(value.next().unwrap());
                println!("汉字={}", key);
                println!("笔画数={}", count);
                let mut result = vec![];
                string.replace_range(0..2, "");
                for i in 1..count.parse().unwrap(){
                    string = string.replace(&format!("#{}:", i), "#");
                }
                let arr = string.split("#");
                
                let mut i = 0;
                for b in arr{
                    i+=1;
                    let mut points:Vec<Point> = b.split(" ").map(|p|{
                        let xy:Vec<&str> = p.trim_right_matches(")")
                        .trim_left_matches("(").split(",").collect();
                        Point::new(xy[0].parse().unwrap(), xy[1].parse().unwrap())
                    }).collect();
                    //横线末尾的沟删掉
                    if points.len()>=4 &&
                        points[points.len()-1].y == points[points.len()-3].y{
                        points.pop();
                        points.pop();
                    }
                    //折线中间的突起去掉
                    let mut new_points:Vec<Point> = vec![];
                    for point in points{
                        let len = new_points.len();
                        if len>=2 && new_points[len-2].x == point.x &&
                                        new_points[len-2].y == point.y{
                            new_points.pop();
                        }else{
                            new_points.push(point);
                        }
                    }

                    result.push(new_points);
                }

                return Some((key.to_string(), result));
                
            }else{
                println!("没有找到花括号");
            }
       }else{
           println!("没有找到);");
       }
   }else{
       println!("没有找到hzbh.main(");
   }
   
   None
}
